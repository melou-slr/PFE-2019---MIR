# -*- coding: utf-8 -*-
"""CNN_obs_results.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CCIpaq4eV1BCBNRS0DpJM_wvswxceDFp
"""

import os
import os.path
from os import path
import numpy as np
import scipy.io
import matplotlib.pyplot as plt
from matplotlib import patches
import keras

from PIL import Image
import pylab as pyl

from keras import models
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras.layers import Dropout
from keras.preprocessing import image
from keras.preprocessing.image import ImageDataGenerator
from keras.callbacks import ModelCheckpoint
from tensorflow.keras.callbacks import TensorBoard

import time
import tensorflow as tf
import pandas as pd
import pickle

from google.colab import drive
drive.mount('/content/drive')
import os
os.chdir('/content/drive/My Drive/Colab Notebooks/')
!pwd
import os.path
from os import path

base_dir = '/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram'
train_dir = '/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram/Train/'
validation_dir = '/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram/Validation/'
test_dir='/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram/Test/'


# Directory with our training SMJ_nonsolo pictures
train_SMJ_nonsolo_dir = '/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram/Train/Non_segment'

# Directory with our training SMJ_solo pictures
train_SMJ_solo_dir = '/content/drive/My Drive/Colab Notebooks/Salami preprocessing_downbeatsync/SSMs_with_metergram/Train/Segment'


# Directory with our test SMJ_nonsolo pictures
validation_SMJ_nonsolo_dir = os.path.join(validation_dir, 'Non_segment')

# Directory with our test SMJ_solo pictures
validation_SMJ_solo_dir = os.path.join(validation_dir, 'Segment')

# All images will be rescaled by 1./255
train_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)

# Flow training images in batches of 128 using train_datagen generator
train_generator = train_datagen.flow_from_directory(
        directory=train_dir,  # This is the source directory for training images
        target_size=(50, 50),  # All images will be resized to 100*100
        batch_size=128,
        # Since we use binary_crossentropy loss, we need binary labels
        class_mode='binary')


test_generator = test_datagen.flow_from_directory(
    directory=test_dir,
    target_size=(50, 50),
    batch_size=1,
    class_mode=None)

predictions=pickle.load(open('/content/drive/My Drive/Colab Notebooks/Results for downbeatsync/predictionsSSMwithdownbeatsync', 'rb'))

len(predictions)

predictions

filenames=test_generator.filenames
results=pd.DataFrame({"Filename":filenames,
                      "Predictions":predictions})
results.to_csv("/content/drive/My Drive/Colab Notebooks/Results for downbeatsync/resultsSSMwithoutdownbeatsync.csv",index=False)